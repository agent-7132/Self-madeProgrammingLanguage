stages:
  - build
  - test
  - verify
  - deploy

build_image:
  stage: build
  script:
    - docker build -t quantum-env -f Dockerfile.quantum .
  tags:
    - docker

unit_test:
  stage: test
  script:
    - python3 -m pytest tests/unit --junitxml=unit_report.xml
  artifacts:
    reports:
      junit: unit_report.xml

memory_test:
  stage: test
  script:
    - apt-get update && apt-get install -y valgrind
    - python3 tests/memory/valgrind_check.py ./build/qvm
  artifacts:
    reports:
      junit: valgrind_report.xml
  tags:
    - memory

wasm_test:
  stage: test
  script:
    - emcc src/runtime/wasm/*.c -o wasm_build/app.wasm
    - node wasm_startup_test.js
  tags:
    - wasm

formal_verification:
  stage: verify
  script:
    - alloy compile hybrid_memory.als --verifier=Alloy4
    - alloy check HybridSafety --max-trace=5
  artifacts:
    paths:
      - verification_report.alloy

deploy_prod:
  stage: deploy
  script:
    - kubectl apply -f k8s-deployment.yaml
  only:
    - master
